<?php

/**
 * ArGrave
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Prakash Panchal
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ArGrave extends BaseArGrave
{
	public function setUp()
    { 
        parent::setUp();
        $this->actAs('Timestampable');
    }
	/**
	 * function updateGraveImageName
	 * @todo Function update grave tables fields
	 * @static
	 * @param $snIdGrave = Grave ID
	 * @param string $ssImagename1 = first image name
	 * @param string $ssImagename2 = second image name
	 */
	public static function updateGraveImageName($snIdGrave,$ssImagename1,$ssImagename2)
	{
		$oQuery = Doctrine_Query::create()
				->update('ArGrave')
				->where('id = ?', $snIdGrave);
				
		if($ssImagename1 != '')
			$oQuery->set('grave_image1','?',$ssImagename1);
		if($ssImagename2 != '')
			$oQuery->set('grave_image2','?',$ssImagename2);

		$oQuery->execute();
	}
	/**
	 * function saveImportGraves
	 * @todo Function add new graves tables fields
	 * @static
	 * @param $amData = Grave insert data
	 */
	public static function saveImportGraves($amData)
	{
		$oGrave = new ArGrave();

		$oGrave->setCountryId($amData['country_id']);
		$oGrave->setCemCemeteryId($amData['cemetery_id']);
		$oGrave->setArAreaId($amData['area_id']);
		$oGrave->setArSectionId($amData['section_id']);
		$oGrave->setArRowId($amData['row_id']);
		$oGrave->setArPlotId($amData['plot_id']);
		$oGrave->setArGraveStatusId($amData['ar_grave_status_id']);
		$oGrave->setGraveNumber($amData['grave_number']);
		$oGrave->setLength($amData['length']);
		$oGrave->setWidth($amData['width']);
		$oGrave->setHeight($amData['height']);
		$oGrave->setUnitTypeId($amData['unit_type_id']);
		$oGrave->setDetails($amData['details']);
		$oGrave->setIsEnabled($amData['enabled']);
		$oGrave->setUserId($amData['user_id']);
		
		$oGrave->save();
		
		return $oGrave;
	}
	/**
	 * function updateGraveStatus
	 * @todo Function update grave status
	 * @static
	 * @param $amData = Grave insert data
	 */
	public static function updateGraveTableField($ssFieldName, $ssFieldValue, $snGraveId)
	{
		$oQuery = Doctrine_Query::create()
				->update('ArGrave')
				->set($ssFieldName,'?',$ssFieldValue)
				->where('id = ?', $snGraveId);
				
		$oQuery->execute();
	}
	/**
	 * function updateGraveComments
	 * @todo Function update grave comments from booking side
	 * @static
	 */
	public static function updateGraveComments($ssComment1, $ssComment2, $snGraveId)
	{
		$oQuery = Doctrine_Query::create()
				->update('ArGrave')
				->set('comment1','?',$ssComment1)
				->set('comment2','?',$ssComment2)
				->where('id = ?', $snGraveId);
				
		$oQuery->execute();
	}
	
	/**
	 * function saveGrave
	 * @todo Function add new grave table fields
	 * @static
	 * @param $amData = Grave insert data
	 */
	public static function saveGrave($amData)
	{
		$oGrave = new ArGrave();

		$oGrave->setCountryId($amData['country_id']);
		$oGrave->setCemCemeteryId($amData['cem_cemetery_id']);

		$oGrave->setArAreaId( ($amData['ar_area_id'] != '') ? $amData['ar_area_id'] : NULL);
		$oGrave->setArSectionId( ($amData['ar_section_id'] != '') ? $amData['ar_section_id'] : NULL);		
		$oGrave->setArRowId( ($amData['ar_row_id'] != '') ? $amData['ar_row_id'] : NULL);
		$oGrave->setArPlotId( ($amData['ar_plot_id'] != '') ? $amData['ar_plot_id'] : NULL);
		
		$oGrave->setArGraveStatusId($amData['ar_grave_status_id']);
		$oGrave->setGraveNumber($amData['grave_number']);
		$oGrave->setUserId($amData['user_id']);
		$oGrave->setCreatedAt(date('Y-m-d H:i:s'));
		$oGrave->setUpdatedAt(date('Y-m-d H:i:s'));
		
		if($amData['comment1'] != '')
			$oGrave->setComment1($amData['comment1']);
		if($amData['comment2'] != '')
			$oGrave->setComment2($amData['comment2']);

		$oGrave->save();
		
		return $oGrave->getId();
	}
	
}
