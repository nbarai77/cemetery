<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('calSchedular', 'doctrine');

/**
 * BasecalSchedular
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cal_schedular_id
 * @property integer $cal_template_id
 * @property timestamp $start_date
 * @property calTemplate $calTemplate
 * @property Doctrine_Collection $calCalendar
 * 
 * @method integer             getCalSchedularId()   Returns the current record's "cal_schedular_id" value
 * @method integer             getCalTemplateId()    Returns the current record's "cal_template_id" value
 * @method timestamp           getStartDate()        Returns the current record's "start_date" value
 * @method calTemplate         getCalTemplate()      Returns the current record's "calTemplate" value
 * @method Doctrine_Collection getCalCalendar()      Returns the current record's "calCalendar" collection
 * @method calSchedular        setCalSchedularId()   Sets the current record's "cal_schedular_id" value
 * @method calSchedular        setCalTemplateId()    Sets the current record's "cal_template_id" value
 * @method calSchedular        setStartDate()        Sets the current record's "start_date" value
 * @method calSchedular        setCalTemplate()      Sets the current record's "calTemplate" value
 * @method calSchedular        setCalCalendar()      Sets the current record's "calCalendar" collection
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasecalSchedular extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cal_schedular');
        $this->hasColumn('cal_schedular_id', 'integer', 4, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cal_template_id', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('start_date', 'timestamp', 4, array(
             'type' => 'timestamp',
             'notnull' => true,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('calTemplate', array(
             'local' => 'cal_template_id',
             'foreign' => 'cal_template_id',
             'onDelete' => 'Cascade'));

        $this->hasMany('calCalendar', array(
             'local' => 'cal_schedular_id',
             'foreign' => 'cal_schedular_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}