<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IntermentBookingTwo', 'doctrine');

/**
 * BaseIntermentBookingTwo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $interment_booking_id
 * @property integer $disease_id
 * @property integer $unit_type_id
 * @property integer $coffin_type_id
 * @property integer $death_certificate
 * @property integer $own_clergy
 * @property string $clergy_name
 * @property integer $coffin_surcharge
 * @property string $burning_drum
 * @property string $fireworks
 * @property string $lowering_device
 * @property string $balloons
 * @property string $chapel_multimedia
 * @property enum $facility
 * @property timestamp $facility_from
 * @property timestamp $facility_to
 * @property integer $coffin_length
 * @property integer $coffin_width
 * @property integer $coffin_height
 * @property enum $chapel
 * @property string $cem_chapel_ids
 * @property timestamp $chapel_time_from
 * @property timestamp $chapel_time_to
 * @property enum $room
 * @property string $cem_room_ids
 * @property timestamp $room_time_from
 * @property timestamp $room_time_to
 * @property string $special_instruction
 * @property string $ceremonial_sand
 * @property string $receipt_number
 * @property string $canopy
 * @property integer $cost
 * @property string $notes
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property IntermentBooking $IntermentBooking
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getIntermentBookingId()   Returns the current record's "interment_booking_id" value
 * @method integer             getDiseaseId()            Returns the current record's "disease_id" value
 * @method integer             getUnitTypeId()           Returns the current record's "unit_type_id" value
 * @method integer             getCoffinTypeId()         Returns the current record's "coffin_type_id" value
 * @method integer             getDeathCertificate()     Returns the current record's "death_certificate" value
 * @method integer             getOwnClergy()            Returns the current record's "own_clergy" value
 * @method string              getClergyName()           Returns the current record's "clergy_name" value
 * @method integer             getCoffinSurcharge()      Returns the current record's "coffin_surcharge" value
 * @method string              getBurningDrum()          Returns the current record's "burning_drum" value
 * @method string              getFireworks()            Returns the current record's "fireworks" value
 * @method string              getLoweringDevice()       Returns the current record's "lowering_device" value
 * @method string              getBalloons()             Returns the current record's "balloons" value
 * @method string              getChapelMultimedia()     Returns the current record's "chapel_multimedia" value
 * @method enum                getFacility()             Returns the current record's "facility" value
 * @method timestamp           getFacilityFrom()         Returns the current record's "facility_from" value
 * @method timestamp           getFacilityTo()           Returns the current record's "facility_to" value
 * @method integer             getCoffinLength()         Returns the current record's "coffin_length" value
 * @method integer             getCoffinWidth()          Returns the current record's "coffin_width" value
 * @method integer             getCoffinHeight()         Returns the current record's "coffin_height" value
 * @method enum                getChapel()               Returns the current record's "chapel" value
 * @method string              getCemChapelIds()         Returns the current record's "cem_chapel_ids" value
 * @method timestamp           getChapelTimeFrom()       Returns the current record's "chapel_time_from" value
 * @method timestamp           getChapelTimeTo()         Returns the current record's "chapel_time_to" value
 * @method enum                getRoom()                 Returns the current record's "room" value
 * @method string              getCemRoomIds()           Returns the current record's "cem_room_ids" value
 * @method timestamp           getRoomTimeFrom()         Returns the current record's "room_time_from" value
 * @method timestamp           getRoomTimeTo()           Returns the current record's "room_time_to" value
 * @method string              getSpecialInstruction()   Returns the current record's "special_instruction" value
 * @method string              getCeremonialSand()       Returns the current record's "ceremonial_sand" value
 * @method string              getReceiptNumber()        Returns the current record's "receipt_number" value
 * @method string              getCanopy()               Returns the current record's "canopy" value
 * @method integer             getCost()                 Returns the current record's "cost" value
 * @method string              getNotes()                Returns the current record's "notes" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method IntermentBooking    getIntermentBooking()     Returns the current record's "IntermentBooking" value
 * @method IntermentBookingTwo setId()                   Sets the current record's "id" value
 * @method IntermentBookingTwo setIntermentBookingId()   Sets the current record's "interment_booking_id" value
 * @method IntermentBookingTwo setDiseaseId()            Sets the current record's "disease_id" value
 * @method IntermentBookingTwo setUnitTypeId()           Sets the current record's "unit_type_id" value
 * @method IntermentBookingTwo setCoffinTypeId()         Sets the current record's "coffin_type_id" value
 * @method IntermentBookingTwo setDeathCertificate()     Sets the current record's "death_certificate" value
 * @method IntermentBookingTwo setOwnClergy()            Sets the current record's "own_clergy" value
 * @method IntermentBookingTwo setClergyName()           Sets the current record's "clergy_name" value
 * @method IntermentBookingTwo setCoffinSurcharge()      Sets the current record's "coffin_surcharge" value
 * @method IntermentBookingTwo setBurningDrum()          Sets the current record's "burning_drum" value
 * @method IntermentBookingTwo setFireworks()            Sets the current record's "fireworks" value
 * @method IntermentBookingTwo setLoweringDevice()       Sets the current record's "lowering_device" value
 * @method IntermentBookingTwo setBalloons()             Sets the current record's "balloons" value
 * @method IntermentBookingTwo setChapelMultimedia()     Sets the current record's "chapel_multimedia" value
 * @method IntermentBookingTwo setFacility()             Sets the current record's "facility" value
 * @method IntermentBookingTwo setFacilityFrom()         Sets the current record's "facility_from" value
 * @method IntermentBookingTwo setFacilityTo()           Sets the current record's "facility_to" value
 * @method IntermentBookingTwo setCoffinLength()         Sets the current record's "coffin_length" value
 * @method IntermentBookingTwo setCoffinWidth()          Sets the current record's "coffin_width" value
 * @method IntermentBookingTwo setCoffinHeight()         Sets the current record's "coffin_height" value
 * @method IntermentBookingTwo setChapel()               Sets the current record's "chapel" value
 * @method IntermentBookingTwo setCemChapelIds()         Sets the current record's "cem_chapel_ids" value
 * @method IntermentBookingTwo setChapelTimeFrom()       Sets the current record's "chapel_time_from" value
 * @method IntermentBookingTwo setChapelTimeTo()         Sets the current record's "chapel_time_to" value
 * @method IntermentBookingTwo setRoom()                 Sets the current record's "room" value
 * @method IntermentBookingTwo setCemRoomIds()           Sets the current record's "cem_room_ids" value
 * @method IntermentBookingTwo setRoomTimeFrom()         Sets the current record's "room_time_from" value
 * @method IntermentBookingTwo setRoomTimeTo()           Sets the current record's "room_time_to" value
 * @method IntermentBookingTwo setSpecialInstruction()   Sets the current record's "special_instruction" value
 * @method IntermentBookingTwo setCeremonialSand()       Sets the current record's "ceremonial_sand" value
 * @method IntermentBookingTwo setReceiptNumber()        Sets the current record's "receipt_number" value
 * @method IntermentBookingTwo setCanopy()               Sets the current record's "canopy" value
 * @method IntermentBookingTwo setCost()                 Sets the current record's "cost" value
 * @method IntermentBookingTwo setNotes()                Sets the current record's "notes" value
 * @method IntermentBookingTwo setCreatedAt()            Sets the current record's "created_at" value
 * @method IntermentBookingTwo setUpdatedAt()            Sets the current record's "updated_at" value
 * @method IntermentBookingTwo setIntermentBooking()     Sets the current record's "IntermentBooking" value
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntermentBookingTwo extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('interment_booking_two');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('interment_booking_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('disease_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('unit_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('coffin_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('death_certificate', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('own_clergy', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('clergy_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('coffin_surcharge', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('burning_drum', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fireworks', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('lowering_device', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('balloons', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('chapel_multimedia', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('facility', 'enum', 3, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'YES',
              1 => 'NO',
             ),
             'primary' => false,
             'default' => 'NO',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('facility_from', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('facility_to', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('coffin_length', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('coffin_width', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('coffin_height', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('chapel', 'enum', 3, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'YES',
              1 => 'NO',
             ),
             'primary' => false,
             'default' => 'NO',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('cem_chapel_ids', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('chapel_time_from', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('chapel_time_to', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('room', 'enum', 3, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'YES',
              1 => 'NO',
             ),
             'primary' => false,
             'default' => 'NO',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('cem_room_ids', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('room_time_from', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('room_time_to', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('special_instruction', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('ceremonial_sand', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('receipt_number', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('canopy', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('cost', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('notes', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('IntermentBooking', array(
             'local' => 'interment_booking_id',
             'foreign' => 'id'));
    }
}