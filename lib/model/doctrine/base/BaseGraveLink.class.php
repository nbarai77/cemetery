<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('GraveLink', 'doctrine');

/**
 * BaseGraveLink
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $cem_cemetery_id
 * @property integer $ar_area_id
 * @property integer $ar_section_id
 * @property integer $ar_row_id
 * @property integer $ar_plot_id
 * @property string $grave_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Country $Country
 * @property CemCemetery $CemCemetery
 * @property ArArea $ArArea
 * @property ArSection $ArSection
 * @property ArRow $ArRow
 * @property ArPlot $ArPlot
 * 
 * @method integer     getId()              Returns the current record's "id" value
 * @method integer     getCountryId()       Returns the current record's "country_id" value
 * @method integer     getCemCemeteryId()   Returns the current record's "cem_cemetery_id" value
 * @method integer     getArAreaId()        Returns the current record's "ar_area_id" value
 * @method integer     getArSectionId()     Returns the current record's "ar_section_id" value
 * @method integer     getArRowId()         Returns the current record's "ar_row_id" value
 * @method integer     getArPlotId()        Returns the current record's "ar_plot_id" value
 * @method string      getGraveId()         Returns the current record's "grave_id" value
 * @method timestamp   getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp   getUpdatedAt()       Returns the current record's "updated_at" value
 * @method Country     getCountry()         Returns the current record's "Country" value
 * @method CemCemetery getCemCemetery()     Returns the current record's "CemCemetery" value
 * @method ArArea      getArArea()          Returns the current record's "ArArea" value
 * @method ArSection   getArSection()       Returns the current record's "ArSection" value
 * @method ArRow       getArRow()           Returns the current record's "ArRow" value
 * @method ArPlot      getArPlot()          Returns the current record's "ArPlot" value
 * @method GraveLink   setId()              Sets the current record's "id" value
 * @method GraveLink   setCountryId()       Sets the current record's "country_id" value
 * @method GraveLink   setCemCemeteryId()   Sets the current record's "cem_cemetery_id" value
 * @method GraveLink   setArAreaId()        Sets the current record's "ar_area_id" value
 * @method GraveLink   setArSectionId()     Sets the current record's "ar_section_id" value
 * @method GraveLink   setArRowId()         Sets the current record's "ar_row_id" value
 * @method GraveLink   setArPlotId()        Sets the current record's "ar_plot_id" value
 * @method GraveLink   setGraveId()         Sets the current record's "grave_id" value
 * @method GraveLink   setCreatedAt()       Sets the current record's "created_at" value
 * @method GraveLink   setUpdatedAt()       Sets the current record's "updated_at" value
 * @method GraveLink   setCountry()         Sets the current record's "Country" value
 * @method GraveLink   setCemCemetery()     Sets the current record's "CemCemetery" value
 * @method GraveLink   setArArea()          Sets the current record's "ArArea" value
 * @method GraveLink   setArSection()       Sets the current record's "ArSection" value
 * @method GraveLink   setArRow()           Sets the current record's "ArRow" value
 * @method GraveLink   setArPlot()          Sets the current record's "ArPlot" value
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGraveLink extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('grave_link');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_cemetery_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_area_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_section_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_row_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_plot_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('grave_id', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('CemCemetery', array(
             'local' => 'cem_cemetery_id',
             'foreign' => 'id'));

        $this->hasOne('ArArea', array(
             'local' => 'ar_area_id',
             'foreign' => 'id'));

        $this->hasOne('ArSection', array(
             'local' => 'ar_section_id',
             'foreign' => 'id'));

        $this->hasOne('ArRow', array(
             'local' => 'ar_row_id',
             'foreign' => 'id'));

        $this->hasOne('ArPlot', array(
             'local' => 'ar_plot_id',
             'foreign' => 'id'));
    }
}