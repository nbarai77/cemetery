<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('FacilityBooking', 'doctrine');

/**
 * BaseFacilityBooking
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $cem_cemetery_id
 * @property string $title
 * @property string $surname
 * @property string $first_name
 * @property string $middle_name
 * @property string $email
 * @property string $telephone
 * @property string $mobile
 * @property string $address
 * @property string $state
 * @property string $suburb_town
 * @property string $postal_code
 * @property string $fax
 * @property string $fax_area_code
 * @property string $area_code
 * @property enum $chapel
 * @property string $cem_chapel_ids
 * @property timestamp $chapel_time_from
 * @property timestamp $chapel_time_to
 * @property integer $chapel_cost
 * @property enum $room
 * @property string $cem_room_ids
 * @property timestamp $room_time_from
 * @property timestamp $room_time_to
 * @property integer $no_of_rooms
 * @property integer $room_cost
 * @property string $special_instruction
 * @property string $receipt_number
 * @property integer $total
 * @property integer $is_finalized
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Country $Country
 * @property CemCemetery $CemCemetery
 * 
 * @method integer         getId()                  Returns the current record's "id" value
 * @method integer         getCountryId()           Returns the current record's "country_id" value
 * @method integer         getCemCemeteryId()       Returns the current record's "cem_cemetery_id" value
 * @method string          getTitle()               Returns the current record's "title" value
 * @method string          getSurname()             Returns the current record's "surname" value
 * @method string          getFirstName()           Returns the current record's "first_name" value
 * @method string          getMiddleName()          Returns the current record's "middle_name" value
 * @method string          getEmail()               Returns the current record's "email" value
 * @method string          getTelephone()           Returns the current record's "telephone" value
 * @method string          getMobile()              Returns the current record's "mobile" value
 * @method string          getAddress()             Returns the current record's "address" value
 * @method string          getState()               Returns the current record's "state" value
 * @method string          getSuburbTown()          Returns the current record's "suburb_town" value
 * @method string          getPostalCode()          Returns the current record's "postal_code" value
 * @method string          getFax()                 Returns the current record's "fax" value
 * @method string          getFaxAreaCode()         Returns the current record's "fax_area_code" value
 * @method string          getAreaCode()            Returns the current record's "area_code" value
 * @method enum            getChapel()              Returns the current record's "chapel" value
 * @method string          getCemChapelIds()        Returns the current record's "cem_chapel_ids" value
 * @method timestamp       getChapelTimeFrom()      Returns the current record's "chapel_time_from" value
 * @method timestamp       getChapelTimeTo()        Returns the current record's "chapel_time_to" value
 * @method integer         getChapelCost()          Returns the current record's "chapel_cost" value
 * @method enum            getRoom()                Returns the current record's "room" value
 * @method string          getCemRoomIds()          Returns the current record's "cem_room_ids" value
 * @method timestamp       getRoomTimeFrom()        Returns the current record's "room_time_from" value
 * @method timestamp       getRoomTimeTo()          Returns the current record's "room_time_to" value
 * @method integer         getNoOfRooms()           Returns the current record's "no_of_rooms" value
 * @method integer         getRoomCost()            Returns the current record's "room_cost" value
 * @method string          getSpecialInstruction()  Returns the current record's "special_instruction" value
 * @method string          getReceiptNumber()       Returns the current record's "receipt_number" value
 * @method integer         getTotal()               Returns the current record's "total" value
 * @method integer         getIsFinalized()         Returns the current record's "is_finalized" value
 * @method timestamp       getCreatedAt()           Returns the current record's "created_at" value
 * @method timestamp       getUpdatedAt()           Returns the current record's "updated_at" value
 * @method Country         getCountry()             Returns the current record's "Country" value
 * @method CemCemetery     getCemCemetery()         Returns the current record's "CemCemetery" value
 * @method FacilityBooking setId()                  Sets the current record's "id" value
 * @method FacilityBooking setCountryId()           Sets the current record's "country_id" value
 * @method FacilityBooking setCemCemeteryId()       Sets the current record's "cem_cemetery_id" value
 * @method FacilityBooking setTitle()               Sets the current record's "title" value
 * @method FacilityBooking setSurname()             Sets the current record's "surname" value
 * @method FacilityBooking setFirstName()           Sets the current record's "first_name" value
 * @method FacilityBooking setMiddleName()          Sets the current record's "middle_name" value
 * @method FacilityBooking setEmail()               Sets the current record's "email" value
 * @method FacilityBooking setTelephone()           Sets the current record's "telephone" value
 * @method FacilityBooking setMobile()              Sets the current record's "mobile" value
 * @method FacilityBooking setAddress()             Sets the current record's "address" value
 * @method FacilityBooking setState()               Sets the current record's "state" value
 * @method FacilityBooking setSuburbTown()          Sets the current record's "suburb_town" value
 * @method FacilityBooking setPostalCode()          Sets the current record's "postal_code" value
 * @method FacilityBooking setFax()                 Sets the current record's "fax" value
 * @method FacilityBooking setFaxAreaCode()         Sets the current record's "fax_area_code" value
 * @method FacilityBooking setAreaCode()            Sets the current record's "area_code" value
 * @method FacilityBooking setChapel()              Sets the current record's "chapel" value
 * @method FacilityBooking setCemChapelIds()        Sets the current record's "cem_chapel_ids" value
 * @method FacilityBooking setChapelTimeFrom()      Sets the current record's "chapel_time_from" value
 * @method FacilityBooking setChapelTimeTo()        Sets the current record's "chapel_time_to" value
 * @method FacilityBooking setChapelCost()          Sets the current record's "chapel_cost" value
 * @method FacilityBooking setRoom()                Sets the current record's "room" value
 * @method FacilityBooking setCemRoomIds()          Sets the current record's "cem_room_ids" value
 * @method FacilityBooking setRoomTimeFrom()        Sets the current record's "room_time_from" value
 * @method FacilityBooking setRoomTimeTo()          Sets the current record's "room_time_to" value
 * @method FacilityBooking setNoOfRooms()           Sets the current record's "no_of_rooms" value
 * @method FacilityBooking setRoomCost()            Sets the current record's "room_cost" value
 * @method FacilityBooking setSpecialInstruction()  Sets the current record's "special_instruction" value
 * @method FacilityBooking setReceiptNumber()       Sets the current record's "receipt_number" value
 * @method FacilityBooking setTotal()               Sets the current record's "total" value
 * @method FacilityBooking setIsFinalized()         Sets the current record's "is_finalized" value
 * @method FacilityBooking setCreatedAt()           Sets the current record's "created_at" value
 * @method FacilityBooking setUpdatedAt()           Sets the current record's "updated_at" value
 * @method FacilityBooking setCountry()             Sets the current record's "Country" value
 * @method FacilityBooking setCemCemetery()         Sets the current record's "CemCemetery" value
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacilityBooking extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('facility_booking');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_cemetery_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('surname', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('middle_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('telephone', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('mobile', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('state', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('suburb_town', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('postal_code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fax', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('fax_area_code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('area_code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('chapel', 'enum', 3, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'YES',
              1 => 'NO',
             ),
             'primary' => false,
             'default' => 'NO',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('cem_chapel_ids', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('chapel_time_from', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('chapel_time_to', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('chapel_cost', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('room', 'enum', 3, array(
             'type' => 'enum',
             'fixed' => 0,
             'unsigned' => false,
             'values' => 
             array(
              0 => 'YES',
              1 => 'NO',
             ),
             'primary' => false,
             'default' => 'NO',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('cem_room_ids', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('room_time_from', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('room_time_to', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('no_of_rooms', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('room_cost', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('special_instruction', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('receipt_number', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('total', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('is_finalized', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('CemCemetery', array(
             'local' => 'cem_cemetery_id',
             'foreign' => 'id'));
    }
}