<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('IntermentBookingLogs', 'doctrine');

/**
 * BaseIntermentBookingLogs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $cem_id
 * @property string $country
 * @property string $cem_name
 * @property string $area
 * @property string $section
 * @property string $row
 * @property string $plot
 * @property string $grave
 * @property string $grantee
 * @property string $operation
 * @property timestamp $operation_date
 * @property string $deceased_surname
 * @property string $deceased_name
 * @property string $status
 * @property string $service_type
 * 
 * @method integer              getId()               Returns the current record's "id" value
 * @method integer              getUserId()           Returns the current record's "user_id" value
 * @method integer              getCemId()            Returns the current record's "cem_id" value
 * @method string               getCountry()          Returns the current record's "country" value
 * @method string               getCemName()          Returns the current record's "cem_name" value
 * @method string               getArea()             Returns the current record's "area" value
 * @method string               getSection()          Returns the current record's "section" value
 * @method string               getRow()              Returns the current record's "row" value
 * @method string               getPlot()             Returns the current record's "plot" value
 * @method string               getGrave()            Returns the current record's "grave" value
 * @method string               getGrantee()          Returns the current record's "grantee" value
 * @method string               getOperation()        Returns the current record's "operation" value
 * @method timestamp            getOperationDate()    Returns the current record's "operation_date" value
 * @method string               getDeceasedSurname()  Returns the current record's "deceased_surname" value
 * @method string               getDeceasedName()     Returns the current record's "deceased_name" value
 * @method string               getStatus()           Returns the current record's "status" value
 * @method string               getServiceType()      Returns the current record's "service_type" value
 * @method IntermentBookingLogs setId()               Sets the current record's "id" value
 * @method IntermentBookingLogs setUserId()           Sets the current record's "user_id" value
 * @method IntermentBookingLogs setCemId()            Sets the current record's "cem_id" value
 * @method IntermentBookingLogs setCountry()          Sets the current record's "country" value
 * @method IntermentBookingLogs setCemName()          Sets the current record's "cem_name" value
 * @method IntermentBookingLogs setArea()             Sets the current record's "area" value
 * @method IntermentBookingLogs setSection()          Sets the current record's "section" value
 * @method IntermentBookingLogs setRow()              Sets the current record's "row" value
 * @method IntermentBookingLogs setPlot()             Sets the current record's "plot" value
 * @method IntermentBookingLogs setGrave()            Sets the current record's "grave" value
 * @method IntermentBookingLogs setGrantee()          Sets the current record's "grantee" value
 * @method IntermentBookingLogs setOperation()        Sets the current record's "operation" value
 * @method IntermentBookingLogs setOperationDate()    Sets the current record's "operation_date" value
 * @method IntermentBookingLogs setDeceasedSurname()  Sets the current record's "deceased_surname" value
 * @method IntermentBookingLogs setDeceasedName()     Sets the current record's "deceased_name" value
 * @method IntermentBookingLogs setStatus()           Sets the current record's "status" value
 * @method IntermentBookingLogs setServiceType()      Sets the current record's "service_type" value
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIntermentBookingLogs extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('interment_booking_logs');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cem_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('country', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('cem_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('area', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('section', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('row', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('plot', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('grave', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('grantee', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('operation', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('operation_date', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('deceased_surname', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('deceased_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('status', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('service_type', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}