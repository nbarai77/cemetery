<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ArSection', 'doctrine');

/**
 * BaseArSection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $cem_cemetery_id
 * @property integer $ar_area_id
 * @property string $section_code
 * @property string $section_name
 * @property integer $first_grave
 * @property integer $last_grave
 * @property string $section_user
 * @property string $section_map_path
 * @property integer $is_enabled
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Country $Country
 * @property CemCemetery $CemCemetery
 * @property ArArea $ArArea
 * @property Doctrine_Collection $ArGrave
 * @property Doctrine_Collection $ArGraveMaintenance
 * @property Doctrine_Collection $ArPlot
 * @property Doctrine_Collection $ArRow
 * @property Doctrine_Collection $Grantee
 * @property Doctrine_Collection $GraveLink
 * @property Doctrine_Collection $IntermentBooking
 * @property Doctrine_Collection $Workflow
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method integer             getCountryId()          Returns the current record's "country_id" value
 * @method integer             getCemCemeteryId()      Returns the current record's "cem_cemetery_id" value
 * @method integer             getArAreaId()           Returns the current record's "ar_area_id" value
 * @method string              getSectionCode()        Returns the current record's "section_code" value
 * @method string              getSectionName()        Returns the current record's "section_name" value
 * @method integer             getFirstGrave()         Returns the current record's "first_grave" value
 * @method integer             getLastGrave()          Returns the current record's "last_grave" value
 * @method string              getSectionUser()        Returns the current record's "section_user" value
 * @method string              getSectionMapPath()     Returns the current record's "section_map_path" value
 * @method integer             getIsEnabled()          Returns the current record's "is_enabled" value
 * @method timestamp           getCreatedAt()          Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()          Returns the current record's "updated_at" value
 * @method Country             getCountry()            Returns the current record's "Country" value
 * @method CemCemetery         getCemCemetery()        Returns the current record's "CemCemetery" value
 * @method ArArea              getArArea()             Returns the current record's "ArArea" value
 * @method Doctrine_Collection getArGrave()            Returns the current record's "ArGrave" collection
 * @method Doctrine_Collection getArGraveMaintenance() Returns the current record's "ArGraveMaintenance" collection
 * @method Doctrine_Collection getArPlot()             Returns the current record's "ArPlot" collection
 * @method Doctrine_Collection getArRow()              Returns the current record's "ArRow" collection
 * @method Doctrine_Collection getGrantee()            Returns the current record's "Grantee" collection
 * @method Doctrine_Collection getGraveLink()          Returns the current record's "GraveLink" collection
 * @method Doctrine_Collection getIntermentBooking()   Returns the current record's "IntermentBooking" collection
 * @method Doctrine_Collection getWorkflow()           Returns the current record's "Workflow" collection
 * @method ArSection           setId()                 Sets the current record's "id" value
 * @method ArSection           setCountryId()          Sets the current record's "country_id" value
 * @method ArSection           setCemCemeteryId()      Sets the current record's "cem_cemetery_id" value
 * @method ArSection           setArAreaId()           Sets the current record's "ar_area_id" value
 * @method ArSection           setSectionCode()        Sets the current record's "section_code" value
 * @method ArSection           setSectionName()        Sets the current record's "section_name" value
 * @method ArSection           setFirstGrave()         Sets the current record's "first_grave" value
 * @method ArSection           setLastGrave()          Sets the current record's "last_grave" value
 * @method ArSection           setSectionUser()        Sets the current record's "section_user" value
 * @method ArSection           setSectionMapPath()     Sets the current record's "section_map_path" value
 * @method ArSection           setIsEnabled()          Sets the current record's "is_enabled" value
 * @method ArSection           setCreatedAt()          Sets the current record's "created_at" value
 * @method ArSection           setUpdatedAt()          Sets the current record's "updated_at" value
 * @method ArSection           setCountry()            Sets the current record's "Country" value
 * @method ArSection           setCemCemetery()        Sets the current record's "CemCemetery" value
 * @method ArSection           setArArea()             Sets the current record's "ArArea" value
 * @method ArSection           setArGrave()            Sets the current record's "ArGrave" collection
 * @method ArSection           setArGraveMaintenance() Sets the current record's "ArGraveMaintenance" collection
 * @method ArSection           setArPlot()             Sets the current record's "ArPlot" collection
 * @method ArSection           setArRow()              Sets the current record's "ArRow" collection
 * @method ArSection           setGrantee()            Sets the current record's "Grantee" collection
 * @method ArSection           setGraveLink()          Sets the current record's "GraveLink" collection
 * @method ArSection           setIntermentBooking()   Sets the current record's "IntermentBooking" collection
 * @method ArSection           setWorkflow()           Sets the current record's "Workflow" collection
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArSection extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ar_section');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_cemetery_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_area_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('section_code', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('section_name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('first_grave', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('last_grave', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('section_user', 'string', 11, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 11,
             ));
        $this->hasColumn('section_map_path', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('CemCemetery', array(
             'local' => 'cem_cemetery_id',
             'foreign' => 'id'));

        $this->hasOne('ArArea', array(
             'local' => 'ar_area_id',
             'foreign' => 'id'));

        $this->hasMany('ArGrave', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('ArGraveMaintenance', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('ArPlot', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('ArRow', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('Grantee', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('GraveLink', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('IntermentBooking', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));

        $this->hasMany('Workflow', array(
             'local' => 'id',
             'foreign' => 'ar_section_id'));
    }
}