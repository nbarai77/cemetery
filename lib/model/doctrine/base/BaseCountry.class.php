<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Country', 'doctrine');

/**
 * BaseCountry
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $is_enabled
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Doctrine_Collection $ArArea
 * @property Doctrine_Collection $ArGrave
 * @property Doctrine_Collection $ArGraveMaintenance
 * @property Doctrine_Collection $ArPlot
 * @property Doctrine_Collection $ArRow
 * @property Doctrine_Collection $ArSection
 * @property Doctrine_Collection $CemCemetery
 * @property Doctrine_Collection $CemChapel
 * @property Doctrine_Collection $CemRoom
 * @property Doctrine_Collection $DepartmentDelegation
 * @property Doctrine_Collection $FacilityBooking
 * @property Doctrine_Collection $FndFndirector
 * @property Doctrine_Collection $Grantee
 * @property Doctrine_Collection $GraveLink
 * @property Doctrine_Collection $IntermentBooking
 * @property Doctrine_Collection $MailContent
 * @property Doctrine_Collection $Workflow
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method string              getName()                 Returns the current record's "name" value
 * @method integer             getIsEnabled()            Returns the current record's "is_enabled" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method Doctrine_Collection getArArea()               Returns the current record's "ArArea" collection
 * @method Doctrine_Collection getArGrave()              Returns the current record's "ArGrave" collection
 * @method Doctrine_Collection getArGraveMaintenance()   Returns the current record's "ArGraveMaintenance" collection
 * @method Doctrine_Collection getArPlot()               Returns the current record's "ArPlot" collection
 * @method Doctrine_Collection getArRow()                Returns the current record's "ArRow" collection
 * @method Doctrine_Collection getArSection()            Returns the current record's "ArSection" collection
 * @method Doctrine_Collection getCemCemetery()          Returns the current record's "CemCemetery" collection
 * @method Doctrine_Collection getCemChapel()            Returns the current record's "CemChapel" collection
 * @method Doctrine_Collection getCemRoom()              Returns the current record's "CemRoom" collection
 * @method Doctrine_Collection getDepartmentDelegation() Returns the current record's "DepartmentDelegation" collection
 * @method Doctrine_Collection getFacilityBooking()      Returns the current record's "FacilityBooking" collection
 * @method Doctrine_Collection getFndFndirector()        Returns the current record's "FndFndirector" collection
 * @method Doctrine_Collection getGrantee()              Returns the current record's "Grantee" collection
 * @method Doctrine_Collection getGraveLink()            Returns the current record's "GraveLink" collection
 * @method Doctrine_Collection getIntermentBooking()     Returns the current record's "IntermentBooking" collection
 * @method Doctrine_Collection getMailContent()          Returns the current record's "MailContent" collection
 * @method Doctrine_Collection getWorkflow()             Returns the current record's "Workflow" collection
 * @method Country             setId()                   Sets the current record's "id" value
 * @method Country             setName()                 Sets the current record's "name" value
 * @method Country             setIsEnabled()            Sets the current record's "is_enabled" value
 * @method Country             setCreatedAt()            Sets the current record's "created_at" value
 * @method Country             setUpdatedAt()            Sets the current record's "updated_at" value
 * @method Country             setArArea()               Sets the current record's "ArArea" collection
 * @method Country             setArGrave()              Sets the current record's "ArGrave" collection
 * @method Country             setArGraveMaintenance()   Sets the current record's "ArGraveMaintenance" collection
 * @method Country             setArPlot()               Sets the current record's "ArPlot" collection
 * @method Country             setArRow()                Sets the current record's "ArRow" collection
 * @method Country             setArSection()            Sets the current record's "ArSection" collection
 * @method Country             setCemCemetery()          Sets the current record's "CemCemetery" collection
 * @method Country             setCemChapel()            Sets the current record's "CemChapel" collection
 * @method Country             setCemRoom()              Sets the current record's "CemRoom" collection
 * @method Country             setDepartmentDelegation() Sets the current record's "DepartmentDelegation" collection
 * @method Country             setFacilityBooking()      Sets the current record's "FacilityBooking" collection
 * @method Country             setFndFndirector()        Sets the current record's "FndFndirector" collection
 * @method Country             setGrantee()              Sets the current record's "Grantee" collection
 * @method Country             setGraveLink()            Sets the current record's "GraveLink" collection
 * @method Country             setIntermentBooking()     Sets the current record's "IntermentBooking" collection
 * @method Country             setMailContent()          Sets the current record's "MailContent" collection
 * @method Country             setWorkflow()             Sets the current record's "Workflow" collection
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCountry extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('country');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ArArea', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('ArGrave', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('ArGraveMaintenance', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('ArPlot', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('ArRow', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('ArSection', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('CemCemetery', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('CemChapel', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('CemRoom', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('DepartmentDelegation', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('FacilityBooking', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('FndFndirector', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('Grantee', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('GraveLink', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('IntermentBooking', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('MailContent', array(
             'local' => 'id',
             'foreign' => 'country_id'));

        $this->hasMany('Workflow', array(
             'local' => 'id',
             'foreign' => 'country_id'));
    }
}