<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('DepartmentDelegation', 'doctrine');

/**
 * BaseDepartmentDelegation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $cem_cemetery_id
 * @property string $name
 * @property string $contact_number
 * @property integer $is_enabled
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Country $Country
 * @property CemCemetery $CemCemetery
 * @property Doctrine_Collection $Workflow
 * 
 * @method integer              getId()              Returns the current record's "id" value
 * @method integer              getCountryId()       Returns the current record's "country_id" value
 * @method integer              getCemCemeteryId()   Returns the current record's "cem_cemetery_id" value
 * @method string               getName()            Returns the current record's "name" value
 * @method string               getContactNumber()   Returns the current record's "contact_number" value
 * @method integer              getIsEnabled()       Returns the current record's "is_enabled" value
 * @method timestamp            getCreatedAt()       Returns the current record's "created_at" value
 * @method timestamp            getUpdatedAt()       Returns the current record's "updated_at" value
 * @method Country              getCountry()         Returns the current record's "Country" value
 * @method CemCemetery          getCemCemetery()     Returns the current record's "CemCemetery" value
 * @method Doctrine_Collection  getWorkflow()        Returns the current record's "Workflow" collection
 * @method DepartmentDelegation setId()              Sets the current record's "id" value
 * @method DepartmentDelegation setCountryId()       Sets the current record's "country_id" value
 * @method DepartmentDelegation setCemCemeteryId()   Sets the current record's "cem_cemetery_id" value
 * @method DepartmentDelegation setName()            Sets the current record's "name" value
 * @method DepartmentDelegation setContactNumber()   Sets the current record's "contact_number" value
 * @method DepartmentDelegation setIsEnabled()       Sets the current record's "is_enabled" value
 * @method DepartmentDelegation setCreatedAt()       Sets the current record's "created_at" value
 * @method DepartmentDelegation setUpdatedAt()       Sets the current record's "updated_at" value
 * @method DepartmentDelegation setCountry()         Sets the current record's "Country" value
 * @method DepartmentDelegation setCemCemetery()     Sets the current record's "CemCemetery" value
 * @method DepartmentDelegation setWorkflow()        Sets the current record's "Workflow" collection
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDepartmentDelegation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('department_delegation');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_cemetery_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('contact_number', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('CemCemetery', array(
             'local' => 'cem_cemetery_id',
             'foreign' => 'id'));

        $this->hasMany('Workflow', array(
             'local' => 'id',
             'foreign' => 'department_delegation'));
    }
}