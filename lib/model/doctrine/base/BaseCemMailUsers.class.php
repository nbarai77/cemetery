<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CemMailUsers', 'doctrine');

/**
 * BaseCemMailUsers
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $cem_mail_id
 * @property integer $from_user_id
 * @property integer $to_user_id
 * @property string $to_email
 * @property integer $sent_status
 * @property integer $read_unread_status
 * @property integer $delete_status
 * @property integer $mail_send_status
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property CemMail $CemMail
 * 
 * @method integer      getId()                 Returns the current record's "id" value
 * @method integer      getCemMailId()          Returns the current record's "cem_mail_id" value
 * @method integer      getFromUserId()         Returns the current record's "from_user_id" value
 * @method integer      getToUserId()           Returns the current record's "to_user_id" value
 * @method string       getToEmail()            Returns the current record's "to_email" value
 * @method integer      getSentStatus()         Returns the current record's "sent_status" value
 * @method integer      getReadUnreadStatus()   Returns the current record's "read_unread_status" value
 * @method integer      getDeleteStatus()       Returns the current record's "delete_status" value
 * @method integer      getMailSendStatus()     Returns the current record's "mail_send_status" value
 * @method timestamp    getCreatedAt()          Returns the current record's "created_at" value
 * @method timestamp    getUpdatedAt()          Returns the current record's "updated_at" value
 * @method CemMail      getCemMail()            Returns the current record's "CemMail" value
 * @method CemMailUsers setId()                 Sets the current record's "id" value
 * @method CemMailUsers setCemMailId()          Sets the current record's "cem_mail_id" value
 * @method CemMailUsers setFromUserId()         Sets the current record's "from_user_id" value
 * @method CemMailUsers setToUserId()           Sets the current record's "to_user_id" value
 * @method CemMailUsers setToEmail()            Sets the current record's "to_email" value
 * @method CemMailUsers setSentStatus()         Sets the current record's "sent_status" value
 * @method CemMailUsers setReadUnreadStatus()   Sets the current record's "read_unread_status" value
 * @method CemMailUsers setDeleteStatus()       Sets the current record's "delete_status" value
 * @method CemMailUsers setMailSendStatus()     Sets the current record's "mail_send_status" value
 * @method CemMailUsers setCreatedAt()          Sets the current record's "created_at" value
 * @method CemMailUsers setUpdatedAt()          Sets the current record's "updated_at" value
 * @method CemMailUsers setCemMail()            Sets the current record's "CemMail" value
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCemMailUsers extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cem_mail_users');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('cem_mail_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('from_user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('to_user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('to_email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('sent_status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('read_unread_status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('delete_status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('mail_send_status', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CemMail', array(
             'local' => 'cem_mail_id',
             'foreign' => 'id'));
    }
}