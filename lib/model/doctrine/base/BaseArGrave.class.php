<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ArGrave', 'doctrine');

/**
 * BaseArGrave
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $cem_cemetery_id
 * @property integer $ar_area_id
 * @property integer $ar_section_id
 * @property integer $ar_row_id
 * @property integer $ar_plot_id
 * @property integer $ar_grave_status_id
 * @property integer $cem_stonemason_id
 * @property string $grave_number
 * @property string $grave_image1
 * @property string $grave_image2
 * @property string $length
 * @property string $width
 * @property string $height
 * @property integer $unit_type_id
 * @property string $details
 * @property string $monument
 * @property string $monuments_grave_position
 * @property integer $monuments_unit_type
 * @property string $monuments_depth
 * @property string $monuments_width
 * @property string $monuments_length
 * @property string $latitude
 * @property string $longitude
 * @property integer $is_enabled
 * @property string $comment1
 * @property string $comment2
 * @property integer $user_id
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Country $Country
 * @property ArArea $ArArea
 * @property ArSection $ArSection
 * @property ArRow $ArRow
 * @property ArPlot $ArPlot
 * @property ArGraveStatus $ArGraveStatus
 * @property CemCemetery $CemCemetery
 * @property Doctrine_Collection $ArGraveMaintenance
 * @property Doctrine_Collection $Grantee
 * @property Doctrine_Collection $GranteeGraveHistory
 * @property Doctrine_Collection $IntermentBooking
 * @property Doctrine_Collection $Workflow
 * 
 * @method integer             getId()                       Returns the current record's "id" value
 * @method integer             getCountryId()                Returns the current record's "country_id" value
 * @method integer             getCemCemeteryId()            Returns the current record's "cem_cemetery_id" value
 * @method integer             getArAreaId()                 Returns the current record's "ar_area_id" value
 * @method integer             getArSectionId()              Returns the current record's "ar_section_id" value
 * @method integer             getArRowId()                  Returns the current record's "ar_row_id" value
 * @method integer             getArPlotId()                 Returns the current record's "ar_plot_id" value
 * @method integer             getArGraveStatusId()          Returns the current record's "ar_grave_status_id" value
 * @method integer             getCemStonemasonId()          Returns the current record's "cem_stonemason_id" value
 * @method string              getGraveNumber()              Returns the current record's "grave_number" value
 * @method string              getGraveImage1()              Returns the current record's "grave_image1" value
 * @method string              getGraveImage2()              Returns the current record's "grave_image2" value
 * @method string              getLength()                   Returns the current record's "length" value
 * @method string              getWidth()                    Returns the current record's "width" value
 * @method string              getHeight()                   Returns the current record's "height" value
 * @method integer             getUnitTypeId()               Returns the current record's "unit_type_id" value
 * @method string              getDetails()                  Returns the current record's "details" value
 * @method string              getMonument()                 Returns the current record's "monument" value
 * @method string              getMonumentsGravePosition()   Returns the current record's "monuments_grave_position" value
 * @method integer             getMonumentsUnitType()        Returns the current record's "monuments_unit_type" value
 * @method string              getMonumentsDepth()           Returns the current record's "monuments_depth" value
 * @method string              getMonumentsWidth()           Returns the current record's "monuments_width" value
 * @method string              getMonumentsLength()          Returns the current record's "monuments_length" value
 * @method string              getLatitude()                 Returns the current record's "latitude" value
 * @method string              getLongitude()                Returns the current record's "longitude" value
 * @method integer             getIsEnabled()                Returns the current record's "is_enabled" value
 * @method string              getComment1()                 Returns the current record's "comment1" value
 * @method string              getComment2()                 Returns the current record's "comment2" value
 * @method integer             getUserId()                   Returns the current record's "user_id" value
 * @method timestamp           getCreatedAt()                Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()                Returns the current record's "updated_at" value
 * @method Country             getCountry()                  Returns the current record's "Country" value
 * @method ArArea              getArArea()                   Returns the current record's "ArArea" value
 * @method ArSection           getArSection()                Returns the current record's "ArSection" value
 * @method ArRow               getArRow()                    Returns the current record's "ArRow" value
 * @method ArPlot              getArPlot()                   Returns the current record's "ArPlot" value
 * @method ArGraveStatus       getArGraveStatus()            Returns the current record's "ArGraveStatus" value
 * @method CemCemetery         getCemCemetery()              Returns the current record's "CemCemetery" value
 * @method Doctrine_Collection getArGraveMaintenance()       Returns the current record's "ArGraveMaintenance" collection
 * @method Doctrine_Collection getGrantee()                  Returns the current record's "Grantee" collection
 * @method Doctrine_Collection getGranteeGraveHistory()      Returns the current record's "GranteeGraveHistory" collection
 * @method Doctrine_Collection getIntermentBooking()         Returns the current record's "IntermentBooking" collection
 * @method Doctrine_Collection getWorkflow()                 Returns the current record's "Workflow" collection
 * @method ArGrave             setId()                       Sets the current record's "id" value
 * @method ArGrave             setCountryId()                Sets the current record's "country_id" value
 * @method ArGrave             setCemCemeteryId()            Sets the current record's "cem_cemetery_id" value
 * @method ArGrave             setArAreaId()                 Sets the current record's "ar_area_id" value
 * @method ArGrave             setArSectionId()              Sets the current record's "ar_section_id" value
 * @method ArGrave             setArRowId()                  Sets the current record's "ar_row_id" value
 * @method ArGrave             setArPlotId()                 Sets the current record's "ar_plot_id" value
 * @method ArGrave             setArGraveStatusId()          Sets the current record's "ar_grave_status_id" value
 * @method ArGrave             setCemStonemasonId()          Sets the current record's "cem_stonemason_id" value
 * @method ArGrave             setGraveNumber()              Sets the current record's "grave_number" value
 * @method ArGrave             setGraveImage1()              Sets the current record's "grave_image1" value
 * @method ArGrave             setGraveImage2()              Sets the current record's "grave_image2" value
 * @method ArGrave             setLength()                   Sets the current record's "length" value
 * @method ArGrave             setWidth()                    Sets the current record's "width" value
 * @method ArGrave             setHeight()                   Sets the current record's "height" value
 * @method ArGrave             setUnitTypeId()               Sets the current record's "unit_type_id" value
 * @method ArGrave             setDetails()                  Sets the current record's "details" value
 * @method ArGrave             setMonument()                 Sets the current record's "monument" value
 * @method ArGrave             setMonumentsGravePosition()   Sets the current record's "monuments_grave_position" value
 * @method ArGrave             setMonumentsUnitType()        Sets the current record's "monuments_unit_type" value
 * @method ArGrave             setMonumentsDepth()           Sets the current record's "monuments_depth" value
 * @method ArGrave             setMonumentsWidth()           Sets the current record's "monuments_width" value
 * @method ArGrave             setMonumentsLength()          Sets the current record's "monuments_length" value
 * @method ArGrave             setLatitude()                 Sets the current record's "latitude" value
 * @method ArGrave             setLongitude()                Sets the current record's "longitude" value
 * @method ArGrave             setIsEnabled()                Sets the current record's "is_enabled" value
 * @method ArGrave             setComment1()                 Sets the current record's "comment1" value
 * @method ArGrave             setComment2()                 Sets the current record's "comment2" value
 * @method ArGrave             setUserId()                   Sets the current record's "user_id" value
 * @method ArGrave             setCreatedAt()                Sets the current record's "created_at" value
 * @method ArGrave             setUpdatedAt()                Sets the current record's "updated_at" value
 * @method ArGrave             setCountry()                  Sets the current record's "Country" value
 * @method ArGrave             setArArea()                   Sets the current record's "ArArea" value
 * @method ArGrave             setArSection()                Sets the current record's "ArSection" value
 * @method ArGrave             setArRow()                    Sets the current record's "ArRow" value
 * @method ArGrave             setArPlot()                   Sets the current record's "ArPlot" value
 * @method ArGrave             setArGraveStatus()            Sets the current record's "ArGraveStatus" value
 * @method ArGrave             setCemCemetery()              Sets the current record's "CemCemetery" value
 * @method ArGrave             setArGraveMaintenance()       Sets the current record's "ArGraveMaintenance" collection
 * @method ArGrave             setGrantee()                  Sets the current record's "Grantee" collection
 * @method ArGrave             setGranteeGraveHistory()      Sets the current record's "GranteeGraveHistory" collection
 * @method ArGrave             setIntermentBooking()         Sets the current record's "IntermentBooking" collection
 * @method ArGrave             setWorkflow()                 Sets the current record's "Workflow" collection
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArGrave extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ar_grave');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_cemetery_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_area_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_section_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_row_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_plot_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ar_grave_status_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_stonemason_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('grave_number', 'string', 25, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('grave_image1', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('grave_image2', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('length', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('width', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('height', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('unit_type_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('details', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('monument', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('monuments_grave_position', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('monuments_unit_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('monuments_depth', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('monuments_width', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('monuments_length', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('latitude', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('longitude', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('comment1', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('comment2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('user_id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('ArArea', array(
             'local' => 'ar_area_id',
             'foreign' => 'id'));

        $this->hasOne('ArSection', array(
             'local' => 'ar_section_id',
             'foreign' => 'id'));

        $this->hasOne('ArRow', array(
             'local' => 'ar_row_id',
             'foreign' => 'id'));

        $this->hasOne('ArPlot', array(
             'local' => 'ar_plot_id',
             'foreign' => 'id'));

        $this->hasOne('ArGraveStatus', array(
             'local' => 'ar_grave_status_id',
             'foreign' => 'id'));

        $this->hasOne('CemCemetery', array(
             'local' => 'cem_cemetery_id',
             'foreign' => 'id'));

        $this->hasMany('ArGraveMaintenance', array(
             'local' => 'id',
             'foreign' => 'ar_grave_id'));

        $this->hasMany('Grantee', array(
             'local' => 'id',
             'foreign' => 'ar_grave_id'));

        $this->hasMany('GranteeGraveHistory', array(
             'local' => 'id',
             'foreign' => 'ar_grave_id'));

        $this->hasMany('IntermentBooking', array(
             'local' => 'id',
             'foreign' => 'ar_grave_id'));

        $this->hasMany('Workflow', array(
             'local' => 'id',
             'foreign' => 'ar_grave_id'));
    }
}