<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ArArea', 'doctrine');

/**
 * BaseArArea
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $country_id
 * @property integer $cem_cemetery_id
 * @property string $area_code
 * @property string $area_description
 * @property string $area_control_numberr
 * @property string $area_name
 * @property string $area_user
 * @property string $area_map_path
 * @property integer $is_enabled
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Country $Country
 * @property CemCemetery $CemCemetery
 * @property Doctrine_Collection $ArGrave
 * @property Doctrine_Collection $ArGraveMaintenance
 * @property Doctrine_Collection $ArPlot
 * @property Doctrine_Collection $ArRow
 * @property Doctrine_Collection $ArSection
 * @property Doctrine_Collection $Grantee
 * @property Doctrine_Collection $GraveLink
 * @property Doctrine_Collection $IntermentBooking
 * @property Doctrine_Collection $Workflow
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getCountryId()            Returns the current record's "country_id" value
 * @method integer             getCemCemeteryId()        Returns the current record's "cem_cemetery_id" value
 * @method string              getAreaCode()             Returns the current record's "area_code" value
 * @method string              getAreaDescription()      Returns the current record's "area_description" value
 * @method string              getAreaControlNumberr()   Returns the current record's "area_control_numberr" value
 * @method string              getAreaName()             Returns the current record's "area_name" value
 * @method string              getAreaUser()             Returns the current record's "area_user" value
 * @method string              getAreaMapPath()          Returns the current record's "area_map_path" value
 * @method integer             getIsEnabled()            Returns the current record's "is_enabled" value
 * @method timestamp           getCreatedAt()            Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()            Returns the current record's "updated_at" value
 * @method Country             getCountry()              Returns the current record's "Country" value
 * @method CemCemetery         getCemCemetery()          Returns the current record's "CemCemetery" value
 * @method Doctrine_Collection getArGrave()              Returns the current record's "ArGrave" collection
 * @method Doctrine_Collection getArGraveMaintenance()   Returns the current record's "ArGraveMaintenance" collection
 * @method Doctrine_Collection getArPlot()               Returns the current record's "ArPlot" collection
 * @method Doctrine_Collection getArRow()                Returns the current record's "ArRow" collection
 * @method Doctrine_Collection getArSection()            Returns the current record's "ArSection" collection
 * @method Doctrine_Collection getGrantee()              Returns the current record's "Grantee" collection
 * @method Doctrine_Collection getGraveLink()            Returns the current record's "GraveLink" collection
 * @method Doctrine_Collection getIntermentBooking()     Returns the current record's "IntermentBooking" collection
 * @method Doctrine_Collection getWorkflow()             Returns the current record's "Workflow" collection
 * @method ArArea              setId()                   Sets the current record's "id" value
 * @method ArArea              setCountryId()            Sets the current record's "country_id" value
 * @method ArArea              setCemCemeteryId()        Sets the current record's "cem_cemetery_id" value
 * @method ArArea              setAreaCode()             Sets the current record's "area_code" value
 * @method ArArea              setAreaDescription()      Sets the current record's "area_description" value
 * @method ArArea              setAreaControlNumberr()   Sets the current record's "area_control_numberr" value
 * @method ArArea              setAreaName()             Sets the current record's "area_name" value
 * @method ArArea              setAreaUser()             Sets the current record's "area_user" value
 * @method ArArea              setAreaMapPath()          Sets the current record's "area_map_path" value
 * @method ArArea              setIsEnabled()            Sets the current record's "is_enabled" value
 * @method ArArea              setCreatedAt()            Sets the current record's "created_at" value
 * @method ArArea              setUpdatedAt()            Sets the current record's "updated_at" value
 * @method ArArea              setCountry()              Sets the current record's "Country" value
 * @method ArArea              setCemCemetery()          Sets the current record's "CemCemetery" value
 * @method ArArea              setArGrave()              Sets the current record's "ArGrave" collection
 * @method ArArea              setArGraveMaintenance()   Sets the current record's "ArGraveMaintenance" collection
 * @method ArArea              setArPlot()               Sets the current record's "ArPlot" collection
 * @method ArArea              setArRow()                Sets the current record's "ArRow" collection
 * @method ArArea              setArSection()            Sets the current record's "ArSection" collection
 * @method ArArea              setGrantee()              Sets the current record's "Grantee" collection
 * @method ArArea              setGraveLink()            Sets the current record's "GraveLink" collection
 * @method ArArea              setIntermentBooking()     Sets the current record's "IntermentBooking" collection
 * @method ArArea              setWorkflow()             Sets the current record's "Workflow" collection
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseArArea extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ar_area');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('country_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('cem_cemetery_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('area_code', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('area_description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('area_control_numberr', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('area_name', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('area_user', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('area_map_path', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('is_enabled', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Country', array(
             'local' => 'country_id',
             'foreign' => 'id'));

        $this->hasOne('CemCemetery', array(
             'local' => 'cem_cemetery_id',
             'foreign' => 'id'));

        $this->hasMany('ArGrave', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('ArGraveMaintenance', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('ArPlot', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('ArRow', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('ArSection', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('Grantee', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('GraveLink', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('IntermentBooking', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));

        $this->hasMany('Workflow', array(
             'local' => 'id',
             'foreign' => 'ar_area_id'));
    }
}