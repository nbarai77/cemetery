<?php

/**
 * CmsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    autoale
 * @subpackage model
 * @author     nitin barai
 * 
 */
class sfGuardUserTable extends PluginsfGuardUserTable
{
   
   /**
    * getsfGuardUserList
    *
    * @access public
    * @param $amExtraParameters $ssMatchFieldValue $amSearch
    */ 
    public function getsfGuardUserList($amExtraParameters = array(), $ssMatchFieldValue = 'All', $ssStatusRole = 'All', $ssSearchOrganisation = '', $amSearch, $ssStatusCondition  = '')
    {
		
        if(!is_array($amExtraParameters) || is_numeric($ssMatchFieldValue)) 
            return false;

        $ssStatusMatch      = ($ssMatchFieldValue == 'Active') ? '1' : '0';
        
        $ssStatusMatchRole      = ($ssMatchFieldValue == 'Active') ? '1' : '0';
        
        if($ssStatusRole == 'Cemetery Manager')
			$ssStatusMatchRole = '2';
		elseif($ssStatusRole == 'Staff')
			$ssStatusMatchRole = '3';
		elseif($ssStatusRole == 'Admin Staff')
			$ssStatusMatchRole = '4';
		elseif($ssStatusRole == 'Funeral Director')
			$ssStatusMatchRole = '5';
		elseif($ssStatusRole == 'Stone Mason')
			$ssStatusMatchRole = '6';
        elseif($ssStatusRole == 'Normal Staff')
			$ssStatusMatchRole = '7';	
        
        //$ssStatusCondition  = ($ssMatchFieldValue != 'All')  ? common::getConditonStatus($ssStatusMatch, 'is_active', 1, '0') : '';
        
        $ssStatusConditionRole  = ($ssStatusRole != 'All')  ? common::getConditonStatus($ssStatusMatchRole, 'id', 2, 3, 4, 5, 6) : '';

		$userid = sfContext::getInstance()->getUser()->getAttribute('userid');
		$cemeteryid = sfContext::getInstance()->getUser()->getAttribute('cemeteryid');
		$isadmin = sfContext::getInstance()->getUser()->getAttribute('issuperadmin');
				
		$omUserCemeteryTitle     = Doctrine_Query::create()
							->select('uc.title')
							->from('UserCemetery uc')
							->where('uc.user_id = sf.id');
							
		$omUserCemeteryOrg     = Doctrine_Query::create()
							->select('uc4.organisation')
							->from('UserCemetery uc4')
							->where('uc4.user_id = sf.id');
							
		$omUserCemeteryCode     = Doctrine_Query::create()
							->select('uc2.code')
							->from('UserCemetery uc2')
							->where('uc2.user_id = sf.id');							
		
		$omUserCemetery     = Doctrine_Query::create()
							->select('cem.name')
							->from('CemCemetery cem')
							->innerJoin('cem.UserCemetery uc3')
							->where('cem.id = uc3.cem_cemetery_id')
							->andWhere('uc3.user_id = sf.id');
							
		$omUserGroup     = Doctrine_Query::create()
							->select('sfg.name')
							->from('sfGuardGroup sfg')
							->where('sfg.id = sfug.group_id');
		
		if($isadmin != 1) {
			
			$omUserCemetery->andWhere('(uc3.group_id = 3 or uc3.group_id = 4 or uc3.group_id = 5 or uc3.group_id = 6 or uc3.group_id = 7) AND uc3.cem_cemetery_id = '.$cemeteryid);
			
			$omCriteria     = Doctrine_Query::create()
								->select('sf.*,sfug.group_id as group_id, ('.$omUserCemeteryOrg->getDql().') as organisation, ('.$omUserCemeteryCode->getDql().') as code, ('.$omUserCemeteryTitle->getDql().') as title, ('.$omUserGroup->getDql().') as group_name,('.$omUserCemetery->getDql().') as cemetery_name')
								->from('sfGuardUser sf')								
								->leftJoin('sf.sfGuardUserGroup sfug')
								->where('sf.is_super_admin = 0');
								if($ssSearchOrganisation != '') {
									//echo $ssSearchOrganisation;exit;
									$omCriteria->andWhere("sf.id IN (SELECT uc1.user_id FROM UserCemetery uc1 WHERE ((uc1.group_id = 3 OR uc1.group_id = 4 or uc1.group_id = 5 or uc1.group_id = 6 or uc1.group_id = 7) AND uc1.cem_cemetery_id = ".$cemeteryid." AND uc1.organisation LIKE '%".$ssSearchOrganisation."%'))");
								}else {
									$omCriteria->andWhere('sf.id IN (SELECT uc1.user_id FROM UserCemetery uc1 WHERE ((uc1.group_id = 3 OR uc1.group_id = 4 or uc1.group_id = 5 or uc1.group_id = 6 or uc1.group_id = 7) AND uc1.cem_cemetery_id = '.$cemeteryid.'))');
								}	
		}else {

			$omCriteria     = Doctrine_Query::create()
								->select('sf.*,sfug.group_id as group_id, ('.$omUserCemeteryOrg->getDql().') as organisation, ('.$omUserCemeteryCode->getDql().') as code, ('.$omUserCemeteryTitle->getDql().') as title, ('.$omUserGroup->getDql().') as group_name,('.$omUserCemetery->getDql().') as cemetery_name')
								->from('sfGuardUser sf')				
								->leftJoin('sf.sfGuardUserGroup sfug')
								->where('sf.is_super_admin = 0');
								if($ssSearchOrganisation != '') {
									$omCriteria->andWhere("sf.id IN (SELECT uc1.user_id FROM UserCemetery uc1 WHERE uc1.organisation LIKE '%".$ssSearchOrganisation."%')");
								}
		}
	   
	   //$arrr = common::setCriteria($omCriteria, $amExtraParameters, $ssStatusCondition, $amSearch);
	   //echo $arrr->getSqlQuery();exit;
       return common::setCriteria($omCriteria, $amExtraParameters, $ssStatusCondition, $amSearch);

    }

   /**
    * getsfGuardAdminList
    *
    * @access public
    * @param $amExtraParameters $ssMatchFieldValue $amSearch
    */ 
    public function getsfGuardAdminList($amExtraParameters = array(), $ssMatchFieldValue = 'All', $amSearch)
    {
        if(!is_array($amExtraParameters) || is_numeric($ssMatchFieldValue)) 
            return false;

        $ssStatusMatch      = ($ssMatchFieldValue == 'Active') ? '1' : '0';
        $ssStatusCondition  = ($ssMatchFieldValue != 'All')  ? common::getConditonStatus($ssStatusMatch, 'is_active', 1, '0') : '';

			$omCriteria     = Doctrine_Query::create()
								->select('sf.*')
								->from('sfGuardUser sf')
								->where('sf.is_super_admin = 1')
								->andWhere('sf.id != 1');

       return common::setCriteria($omCriteria, $amExtraParameters, $ssStatusCondition, $amSearch);

    }
	
	/**
    * getsfGuardStonemasonList
    *
    * @access public
    * @param $amExtraParameters $ssMatchFieldValue $amSearch
    */ 
    public function getsfGuardStonemasonList($amExtraParameters = array(), $amSearch, $ssStatusCondition  = '')
    {
        if(!is_array($amExtraParameters)) 
            return false;

		$snUserId = sfContext::getInstance()->getUser()->getAttribute('userid');
		$snCemeteryId = sfContext::getInstance()->getUser()->getAttribute('cemeteryid');
		
		$omCriteria     = Doctrine_Query::create()
							->select('uc.*')
							->from('UserCemetery uc')
							->where('uc.group_id = 6')
							->andWhere('uc.cem_cemetery_id = ?', $snCemeteryId);
		
		return common::setCriteria($omCriteria, $amExtraParameters, $ssStatusCondition, $amSearch);
    }
	/**
    * getCemeteryStaffList
    *
    * @access public
    * @param $amExtraParameters $ssMatchFieldValue $amSearch
    */ 
    public function getCemeteryStaffList($snCemeteryId = '', $ssLogType = '', $ssFlag = '')
    {
		$snUserId = sfContext::getInstance()->getUser()->getAttribute('userid');
		$snCemeteryId = ($snCemeteryId != '') ? $snCemeteryId : sfContext::getInstance()->getUser()->getAttribute('cemeteryid');
		
		$oQueryName = Doctrine_Query::create()->select('CONCAT(uc.title," ",sf.first_name," ",sf.last_name) as completed_by')
						->from('sfGuardUser sf')
						->Where("sf.id = uc.user_id");
						
		$omCriteria     = Doctrine_Query::create()
							->select('uc.user_id,
								('.$oQueryName->getDql().') as staff_name, 
								')
							->from('UserCemetery uc');
                        
                        $ssGroup = '';
						if($ssFlag)                            
                            $omCriteria->where('uc.group_id = '.sfConfig::get('app_cemrole_normaluser').' OR uc.group_id = '.sfConfig::get('app_cemrole_staff'));
                        else
                        {
                            if($ssLogType != 'booking')
                                $omCriteria->where('uc.group_id = '.sfConfig::get('app_cemrole_manager').' OR uc.group_id = '.sfConfig::get('app_cemrole_staff').' OR uc.group_id = '.sfConfig::get('app_cemrole_staffadmin'));
                            else
                                $omCriteria->where('uc.group_id = '.sfConfig::get('app_cemrole_manager').' OR uc.group_id = '.sfConfig::get('app_cemrole_staff').' OR uc.group_id = '.sfConfig::get('app_cemrole_staffadmin').' OR uc.group_id = '.sfConfig::get('app_cemrole_funeraldirector').' OR uc.group_id = '.sfConfig::get('app_cemrole_normaluser').' ');
                        }
                        
                        
		$omCriteria->andWhere('uc.cem_cemetery_id = ?', $snCemeteryId);		
		$amStaff = $omCriteria->fetchArray();        
		$asStaff = array();
		if(count($amStaff) > 0)
		{
			foreach($amStaff as $asDataSet)
				$asStaff[$asDataSet['user_id']] = $asDataSet['staff_name'];
		}
		
		return $asStaff;
    }
	/**
    * getFunderalDirectorsAsPerUserRole
    *
    * @access public
    * @param $amExtraParameters $ssMatchFieldValue $amSearch
    */ 
    public function getFunderalDirectorsAsPerUserRole()
    {
		$snUserId = sfContext::getInstance()->getUser()->getAttribute('userid');
		$snCemeteryId = sfContext::getInstance()->getUser()->getAttribute('cemeteryid');
		
		$omCriteria     = Doctrine_Query::create()
							->select('uc.user_id, uc.organisation as fnd_name')
							->from('UserCemetery uc')
							->where('uc.group_id = '.sfConfig::get('app_cemrole_funeraldirector').' ');

						if($snUserId != 1)
							$omCriteria->andWhere('uc.cem_cemetery_id = ?', $snCemeteryId);
						
		$amFndList = $omCriteria->orderBy('fnd_name')->fetchArray();

		$asFnd = array();
		if(count($amFndList) > 0)
		{
			foreach($amFndList as $asDataSet)
				$asFnd[$asDataSet['user_id']] = $asDataSet['fnd_name'];
		}
		
		return $asFnd;
	}
   /**
    * getStoneMasonByUserRole
    *
    * @access public
    * @param $amExtraParameters $ssMatchFieldValue $amSearch
    */ 
    public function getStoneMasonByUserRole()
    {
		$snUserId = sfContext::getInstance()->getUser()->getAttribute('userid');
		$snCemeteryId = sfContext::getInstance()->getUser()->getAttribute('cemeteryid');
		
		$omCriteria     = Doctrine_Query::create()
							->select('uc.user_id, uc.organisation as stonemason_name')
							->from('UserCemetery uc')
							->where('uc.group_id = '.sfConfig::get('app_cemrole_stonemason').' ');

						if($snUserId != 1)
							$omCriteria->andWhere('uc.cem_cemetery_id = ?', $snCemeteryId);
						
		$amStonemasonList = $omCriteria->orderBy('stonemason_name')->fetchArray();

		$asStonemason = array();
		if(count($amStonemasonList) > 0)
		{
			foreach($amStonemasonList as $asDataSet)
				$asStonemason[$asDataSet['user_id']] = $asDataSet['stonemason_name'];
		}
		
		return $asStonemason;
	}   
}