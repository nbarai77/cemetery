<?php

/**
 * Language
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    cemetery
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Language extends BaseLanguage
{
	public function setUp()
    { 
        parent::setUp();
        $this->actAs('Timestampable');
    }
    /**
     * Function for check name exists or not.
     *
     * @access  public
     * @param   string  $smName name.
     * @param   integer $snIdGroup Optional - group id.
     * @return  mixed   object|boolean  object of record set, or
     *                  false if parameter is null
     */
    public function checkLanguageNameExist($smName, $snIdGroup = '')
    {
        if($smName == '') return false;

        $oQuery = Doctrine_Query::create()
                                ->select('lg.language_name')
                                ->from('Language lg')
                                ->where('lg.language_name = ?', $smName);
                            
        if($snIdGroup)
            $oQuery->andwhere('lg.id != ?', $snIdGroup);

        return $oQuery->execute();
    }	
    /**
     * Function for check culture exists or not.
     *
     * @access  public
     * @param   string  $smName name.
     * @param   integer $snIdGroup Optional - group id.
     * @return  mixed   object|boolean  object of record set, or
     *                  false if parameter is null
     */
    public function checkCultureExist($smName, $snIdGroup = '')
    {
        if($smName == '') return false;

        $oQuery = Doctrine_Query::create()
                                ->select('lg.culture')
                                ->from('Language lg')
                                ->where('lg.culture = ?', $smName);
                            
        if($snIdGroup)
            $oQuery->andwhere('lg.id != ?', $snIdGroup);

        return $oQuery->execute();
    }    	
}
